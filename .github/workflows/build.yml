name: Linux

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: build
      PROJECT_INSTALL_PATH: ${{ github.event.repository.name }}-linux-x64

    permissions:
      contents: write

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Prepare environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev
          mkdir -p ${{ env.PROJECT_INSTALL_PATH }}
        shell: bash

      - name: Configure
        run: |
          cmake -B ${{ env.PROJECT_BUILD_PATH }} -DCMAKE_BUILD_TYPE=Release
        shell: bash

      - name: Build
        run: |
          cmake --build ${{ env.PROJECT_BUILD_PATH }}
        shell: bash

      - name: Generate artifacts
        run: |
          ls -l ${{ env.PROJECT_BUILD_PATH }}/src
          cp ${{ env.PROJECT_BUILD_PATH }}/src/main ${{ env.PROJECT_INSTALL_PATH }}/${{ env.PROJECT_NAME }}
          ls -l ${{ env.PROJECT_INSTALL_PATH }}
          7z a ./${{ env.PROJECT_INSTALL_PATH }}.zip ./${{ env.PROJECT_INSTALL_PATH }}
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_INSTALL_PATH }}.zip
          path: ./${{ env.PROJECT_INSTALL_PATH }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.PROJECT_INSTALL_PATH }}.zip
          generate_release_notes: true
          draft: true

      - run: echo "This job's status is ${{ job.status }}."
